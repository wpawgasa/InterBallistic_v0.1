/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dti.internalballistics;

import dti.internalballistics.cad.CAD;
import java.awt.Component;

import java.awt.Label;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractButton;
import javax.swing.ButtonGroup;
import javax.swing.ButtonModel;
import javax.swing.JButton;
import javax.swing.JSeparator;
import javax.swing.JSplitPane;
import javax.swing.JToggleButton;
import javax.swing.table.DefaultTableModel;
import org.apache.batik.dom.svg.SAXSVGDocumentFactory;
import org.apache.batik.gvt.event.SelectionListener;
import org.apache.batik.swing.JSVGCanvas;
import org.apache.batik.util.XMLResourceDescriptor;
import org.kabeja.parser.DXFParseException;
import org.kabeja.svg.SVGGenerator;
import org.kabeja.xml.SAXGenerator;
import org.kabeja.xml.SAXSerializer;
import org.kabeja.xslt.SAXXMLSerializer;
import org.w3c.dom.Element;
import org.w3c.dom.svg.SVGDocument;

/**
 *
 * @author amabird
 */
public class SectionProperties extends javax.swing.JFrame {

    /**
     * Creates new form SectionProperties
     */
    public SectionProperties() {

        initComponents();
        firstLoading();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")


    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollBar1 = new javax.swing.JScrollBar();
        sectionPropTabbedPane = new javax.swing.JTabbedPane();
        propellantTab = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        propellantTable = new javax.swing.JTable();
        addPropellantBt = new javax.swing.JButton();
        removePropellantBt = new javax.swing.JButton();
        propellantPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        burningRateTB = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        pressureExponentTB = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        densityTB = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        alphaConstTB = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        gasConstTB = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        gasTempTB = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        heatRatioTB = new javax.swing.JTextField();
        savePropertiesBT = new javax.swing.JButton();
        geometricTab = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        circleToggleButton = new javax.swing.JToggleButton();
        wheelToggleButton = new javax.swing.JToggleButton();
        starToggleButton = new javax.swing.JToggleButton();
        hexaToggleButton = new javax.swing.JToggleButton();
        pentaToggleButton = new javax.swing.JToggleButton();
        jSpinner1 = new javax.swing.JSpinner();
        cadPanelShape = new javax.swing.JPanel();
        innerSettingPanel = new javax.swing.JPanel();
        diameterInner = new javax.swing.JLabel();
        innerDiameterSpin = new javax.swing.JSpinner();
        mmLabel = new javax.swing.JLabel();
        innerHeaderLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(662, 597));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        addWindowStateListener(new java.awt.event.WindowStateListener() {
            public void windowStateChanged(java.awt.event.WindowEvent evt) {
                formWindowStateChanged(evt);
            }
        });

        propellantTab.setPreferredSize(new java.awt.Dimension(590, 545));

        propellantTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Layer", "Name", "Material"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        propellantTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                propellantTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(propellantTable);

        addPropellantBt.setText("Add");
        addPropellantBt.setPreferredSize(new java.awt.Dimension(93, 29));
        addPropellantBt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addPropellantBtMouseClicked(evt);
            }
        });

        removePropellantBt.setText("Remove");
        removePropellantBt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removePropellantBtMouseClicked(evt);
            }
        });

        jLabel4.setText("Burning rate (m/s) ");

        jLabel5.setText("/1000 ");

        jLabel6.setText("Pressure Exponent");

        jLabel7.setText("Density (kg/m^3)");

        jLabel8.setText("*1000 ");

        jLabel9.setText("Alpha erosive burning const.");

        jLabel10.setText("/10^7");

        jLabel11.setText("Individual gas const. (J/(kg*K))");

        jLabel12.setText("Gas temperature (K)");

        jLabel14.setText("Heat Capacity Ratio");

        javax.swing.GroupLayout propellantPanelLayout = new javax.swing.GroupLayout(propellantPanel);
        propellantPanel.setLayout(propellantPanelLayout);
        propellantPanelLayout.setHorizontalGroup(
            propellantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(propellantPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(propellantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, propellantPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(propellantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, propellantPanelLayout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(gasTempTB, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, propellantPanelLayout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(propellantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(heatRatioTB, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(gasConstTB, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(134, 134, 134))
                    .addGroup(propellantPanelLayout.createSequentialGroup()
                        .addGroup(propellantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addGroup(propellantPanelLayout.createSequentialGroup()
                                .addGroup(propellantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(propellantPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(burningRateTB, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(propellantPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(pressureExponentTB, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, propellantPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(densityTB, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, propellantPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(18, 18, 18)
                                        .addComponent(alphaConstTB, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(propellantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(propellantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel8))
                                    .addComponent(jLabel10))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        propellantPanelLayout.setVerticalGroup(
            propellantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(propellantPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(propellantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(propellantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(burningRateTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(propellantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(pressureExponentTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(propellantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(densityTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(propellantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(alphaConstTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(propellantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(gasTempTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(propellantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(gasConstTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(propellantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(heatRatioTB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        savePropertiesBT.setText("Save");
        savePropertiesBT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                savePropertiesBTMouseClicked(evt);
            }
        });
        savePropertiesBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savePropertiesBTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout propellantTabLayout = new javax.swing.GroupLayout(propellantTab);
        propellantTab.setLayout(propellantTabLayout);
        propellantTabLayout.setHorizontalGroup(
            propellantTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(propellantTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(propellantTabLayout.createSequentialGroup()
                .addGroup(propellantTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(propellantTabLayout.createSequentialGroup()
                        .addComponent(addPropellantBt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removePropellantBt))
                    .addComponent(propellantPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(savePropertiesBT))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        propellantTabLayout.setVerticalGroup(
            propellantTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(propellantTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(propellantTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addPropellantBt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removePropellantBt))
                .addGap(31, 31, 31)
                .addComponent(propellantPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(savePropertiesBT)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        sectionPropTabbedPane.addTab("Propellant", propellantTab);

        jLabel1.setText("Diameter :");

        jLabel2.setText("mm");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Shape :"));

        circleToggleButton.setBackground(new java.awt.Color(0, 0, 0));
        circleToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dti/icon/DTICircleIcon.png"))); // NOI18N
        circleToggleButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                circleToggleButtonItemStateChanged(evt);
            }
        });

        wheelToggleButton.setBackground(new java.awt.Color(0, 0, 0));
        wheelToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dti/icon/DTIWheelIcon.png"))); // NOI18N
        wheelToggleButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                wheelToggleButtonItemStateChanged(evt);
            }
        });

        starToggleButton.setBackground(new java.awt.Color(0, 0, 0));
        starToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dti/icon/DTIStarIcon.png"))); // NOI18N
        starToggleButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                starToggleButtonItemStateChanged(evt);
            }
        });

        hexaToggleButton.setBackground(new java.awt.Color(0, 0, 0));
        hexaToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dti/icon/DTIHexagonIcon.png"))); // NOI18N
        hexaToggleButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                hexaToggleButtonItemStateChanged(evt);
            }
        });

        pentaToggleButton.setBackground(new java.awt.Color(0, 0, 0));
        pentaToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dti/icon/DTIPentagonIcon.png"))); // NOI18N
        pentaToggleButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                pentaToggleButtonItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(circleToggleButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(wheelToggleButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(starToggleButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pentaToggleButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hexaToggleButton)
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(wheelToggleButton)
                        .addComponent(circleToggleButton)
                        .addComponent(starToggleButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(hexaToggleButton)
                            .addComponent(pentaToggleButton))
                        .addGap(2, 2, 2)))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        cadPanelShape.setBackground(new java.awt.Color(255, 255, 255));
        cadPanelShape.setPreferredSize(new java.awt.Dimension(200, 200));

        javax.swing.GroupLayout cadPanelShapeLayout = new javax.swing.GroupLayout(cadPanelShape);
        cadPanelShape.setLayout(cadPanelShapeLayout);
        cadPanelShapeLayout.setHorizontalGroup(
            cadPanelShapeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 298, Short.MAX_VALUE)
        );
        cadPanelShapeLayout.setVerticalGroup(
            cadPanelShapeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        diameterInner.setText("Diameter:");

        innerDiameterSpin.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                innerDiameterSpinStateChanged(evt);
            }
        });
        innerDiameterSpin.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                innerDiameterSpinInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });

        mmLabel.setText("mm");

        innerHeaderLabel.setText("Inner");

        javax.swing.GroupLayout innerSettingPanelLayout = new javax.swing.GroupLayout(innerSettingPanel);
        innerSettingPanel.setLayout(innerSettingPanelLayout);
        innerSettingPanelLayout.setHorizontalGroup(
            innerSettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(innerSettingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(innerSettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(innerSettingPanelLayout.createSequentialGroup()
                        .addComponent(diameterInner)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(innerDiameterSpin, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mmLabel))
                    .addComponent(innerHeaderLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        innerSettingPanelLayout.setVerticalGroup(
            innerSettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(innerSettingPanelLayout.createSequentialGroup()
                .addGroup(innerSettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(innerSettingPanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(innerHeaderLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(innerSettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(diameterInner)
                            .addComponent(mmLabel)))
                    .addGroup(innerSettingPanelLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(innerDiameterSpin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(240, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout geometricTabLayout = new javax.swing.GroupLayout(geometricTab);
        geometricTab.setLayout(geometricTabLayout);
        geometricTabLayout.setHorizontalGroup(
            geometricTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(geometricTabLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(geometricTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(geometricTabLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(geometricTabLayout.createSequentialGroup()
                        .addComponent(cadPanelShape, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(innerSettingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        geometricTabLayout.setVerticalGroup(
            geometricTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(geometricTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(geometricTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(geometricTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cadPanelShape, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(innerSettingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jPanel1.getAccessibleContext().setAccessibleName("shape");

        sectionPropTabbedPane.addTab("Geometric", geometricTab);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sectionPropTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 611, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(sectionPropTabbedPane)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addPropellantBtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addPropellantBtMouseClicked

        rowNo++;
        DefaultTableModel model = (DefaultTableModel) propellantTable.getModel();
        model.addRow(new Object[]{rowNo, "", ""});
        propellantList.add(new PropellantProperties());
    }//GEN-LAST:event_addPropellantBtMouseClicked

    private void removePropellantBtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removePropellantBtMouseClicked
        DefaultTableModel model = (DefaultTableModel) propellantTable.getModel();
        int selectedRow = propellantTable.getSelectedRow();
        if (selectedRow != -1) {
            propellantList.remove(propellantTable.getSelectedRow());
            model.removeRow(propellantTable.getSelectedRow());
            rowNo--;
        }
        int totalRow = propellantTable.getRowCount();

        for (int countRow = 0; countRow < totalRow; countRow++) {
            model.setValueAt(countRow + 1, countRow, 0);

        }
    }//GEN-LAST:event_removePropellantBtMouseClicked

    private void wheelToggleButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_wheelToggleButtonItemStateChanged
        String path = "dti/image/DTIWheel.dxf";
        if (wheelToggleButton.isSelected()) {
            cadPanelShape.removeAll();
            setCADShape(path);
            innerSettingPanel.setVisible(true);
            innerHeaderLabel.setText("Inner Wheel");
            diameterInner.setText("Diameter :");
        }
    }//GEN-LAST:event_wheelToggleButtonItemStateChanged

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        cadPanelShape.repaint();
        cadPanelShape.setVisible(true);
    }//GEN-LAST:event_formComponentResized

    private void formWindowStateChanged(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowStateChanged
        cadPanelShape.repaint();
    }//GEN-LAST:event_formWindowStateChanged

    private void hexaToggleButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_hexaToggleButtonItemStateChanged
        String path = "dti/image/DTIHexagon.dxf";
        if (hexaToggleButton.isSelected()) {
            //innerSettingPanel.removeAll();
            cadPanelShape.removeAll();
            setCADShape(path);
            innerSettingPanel.setVisible(true);
            innerHeaderLabel.setText("Inner Hexagon");
            diameterInner.setText("Apothem :");

    }//GEN-LAST:event_hexaToggleButtonItemStateChanged
    }
    private void starToggleButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_starToggleButtonItemStateChanged
        String path = "dti/image/DTIStar.dxf";
        if (starToggleButton.isSelected()) {
            cadPanelShape.removeAll();
            setCADShape(path);
            innerSettingPanel.setVisible(true);
            innerHeaderLabel.setText("Inner Star");
            diameterInner.setText("Radius :");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_starToggleButtonItemStateChanged

    private void circleToggleButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_circleToggleButtonItemStateChanged
        String path = "dti/image/DTICircle.dxf";

        if (circleToggleButton.isSelected()) {
            isCircle = true;
            cadPanelShape.removeAll();
            setCADShape(path);
            innerSettingPanel.setVisible(true);
            innerHeaderLabel.setText("Inner Circle");
            diameterInner.setText("Diameter :");

        }        // TODO add your handling code here:
    }//GEN-LAST:event_circleToggleButtonItemStateChanged

    private void pentaToggleButtonItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_pentaToggleButtonItemStateChanged
        String path = "dti/image/DTIPentagon.dxf";
        if (pentaToggleButton.isSelected()) {
            cadPanelShape.removeAll();
            setCADShape(path);
            innerSettingPanel.setVisible(true);
            innerHeaderLabel.setText("Inner Pentagon");
            diameterInner.setText("Apothem :");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_pentaToggleButtonItemStateChanged

    private void innerDiameterSpinInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_innerDiameterSpinInputMethodTextChanged
        newInnerDiameter = (double) innerDiameterSpin.getValue();
        System.out.println(newInnerDiameter);
    }//GEN-LAST:event_innerDiameterSpinInputMethodTextChanged

    private void innerDiameterSpinStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_innerDiameterSpinStateChanged
        newInnerDiameter = (Integer) innerDiameterSpin.getValue();
        //setCADShape("dti/image/DTICircle.dxf");
        cadPanelShape.remove(cADPanel);
        renderCircle();
        cad.outputSVG(cADPanel);
        // cad.outputDXF();
//         ByteArrayOutputStream byteArrayOutputStream =   cad.outputDXF();
//        cad.convertToSVG(byteArrayOutputStream, cADPanel);
//            data = cad.byteArraynOutputStream.toByteArray();
//            inputStream = new ByteArrayInputStream(data);
//            cADPanel = new CADPanel((inputStream));
//            cADPanel.setSize(300, 300);
//            cADPanel.repaint();
        cadPanelShape.add(cADPanel);
        cadPanelShape.repaint();
    }//GEN-LAST:event_innerDiameterSpinStateChanged

    private void savePropertiesBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savePropertiesBTActionPerformed
 
    }//GEN-LAST:event_savePropertiesBTActionPerformed

    private void savePropertiesBTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_savePropertiesBTMouseClicked
        int index = propellantTable.getSelectedRow();
        PropellantProperties propellantProperties = propellantList.get(index);
        propellantProperties.setBurningRate(Double.parseDouble(burningRateTB.getText()));
        propellantProperties.setPressureExponent(Double.parseDouble(pressureExponentTB.getText()));
        propellantProperties.setDensity(Double.parseDouble(densityTB.getText()));
        propellantProperties.setBurningConst(Double.parseDouble(alphaConstTB.getText()));
        propellantProperties.setGasTemp(Double.parseDouble(gasTempTB.getText()));
        propellantProperties.setGasConst(Double.parseDouble(gasConstTB.getText()));
        propellantProperties.setHeatRatio(Double.parseDouble(heatRatioTB.getText()));
    }//GEN-LAST:event_savePropertiesBTMouseClicked

    private void propellantTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_propellantTableMouseClicked
               DefaultTableModel model = (DefaultTableModel) propellantTable.getModel();
        int selectedRow = propellantTable.getSelectedRow();
        if (selectedRow != -1) {
            PropellantProperties propellantProperties = propellantList.get(selectedRow);
//            double burningRate= propellantProperties.getBurningRate();
//            String burningRatestr = String.valueOf(burningRate);
            burningRateTB.setText(String.valueOf(propellantProperties.getBurningRate()));
            pressureExponentTB.setText(String.valueOf(propellantProperties.getPressureExponent()));
            densityTB.setText(String.valueOf(propellantProperties.getDensity()));
            alphaConstTB.setText(String.valueOf(propellantProperties.getBurningConst()));
            gasTempTB.setText(String.valueOf(propellantProperties.getGasTemp()));
            gasConstTB.setText(String.valueOf(propellantProperties.getGasConst()));
            heatRatioTB.setText(String.valueOf(propellantProperties.getHeatRatio()));
        }
    }//GEN-LAST:event_propellantTableMouseClicked

    public void createGUI() {
        PropertiesPanel propertiesPanel = new PropertiesPanel();

        JSplitPane jSplitPane1 = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT, sectionPropTabbedPane, propertiesPanel);
        this.getContentPane().add(jSplitPane1);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        try {
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
             * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
             */
            try {
                for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                    if ("Native".equals(info.getName())) {
                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                        break;

                    }
                }
            } catch (ClassNotFoundException ex) {
                java.util.logging.Logger.getLogger(SectionProperties.class
                        .getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                java.util.logging.Logger.getLogger(SectionProperties.class
                        .getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                java.util.logging.Logger.getLogger(SectionProperties.class
                        .getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                java.util.logging.Logger.getLogger(SectionProperties.class
                        .getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
            //</editor-fold>

            /* Create and display the form */
            SectionProperties sectionProperties = new SectionProperties();
            sectionProperties.cad = new CAD();
            sectionProperties.cadPanelShape.add(sectionProperties.cADPanel);
            InputStream is = sectionProperties.getClass().getClassLoader().getResource("dti/image/Android.svg").openStream();
            String svgParser = XMLResourceDescriptor.getXMLParserClassName();
            SAXSVGDocumentFactory sAXSVGDocumentFactory = new SAXSVGDocumentFactory(svgParser);
            SVGDocument sVGDocument = sAXSVGDocumentFactory.createSVGDocument(null, is);
            Element root = sVGDocument.getDocumentElement();
            System.out.println(root.getAttribute("width"));
            sectionProperties.cADPanel.setSVGDocument(sVGDocument);

            sectionProperties.setVisible(true);

        } catch (IOException ex) {
            Logger.getLogger(SectionProperties.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>

    }

    public void setCADShape(String path) {
        try {
//            this.cad.parseFile(path);
//            SAXGenerator sAXGenerator = new SVGGenerator();
//            SAXSerializer sAXSerializer = new SAXXMLSerializer();
//            this.cad.byteArrayOutputStream = new ByteArrayOutputStream();
//            sAXSerializer.setOutput(this.cad.byteArrayOutputStream);
//            
//            sAXGenerator.setProperties(new HashMap());
//            
//            sAXGenerator.generate(this.cad.dXFDocument, sAXSerializer);
//            byte[] data = this.cad.byteArrayOutputStream.toByteArray();
//            ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(data);
//            

            InputStream is = this.getClass().getClassLoader().getResource("dti/image/Android.svg").openStream();
            String svgParser = XMLResourceDescriptor.getXMLParserClassName();
            SAXSVGDocumentFactory sAXSVGDocumentFactory = new SAXSVGDocumentFactory(svgParser);
            SVGDocument sVGDocument = sAXSVGDocumentFactory.createSVGDocument(null, is);
            System.out.println(sVGDocument.getTextContent());
            this.cADPanel.setSVGDocument(sVGDocument);
            this.cadPanelShape.repaint();
//        cad = new CAD();
//        cad.parseFile(path);
//        if(newInnerDiameter != 0 && isCircle == true){
//            renderCircle(cad);
//        }

//        ByteArrayOutputStream byteArrayOutputStream =   cad.outputDXF();
//        data = cad.byteArraynOutputStream.toByteArray();
//        inputStream = new ByteArrayInputStream(data);
//        cADPanel = new CADPanel((inputStream));
//        cad.convertToSVG(byteArrayOutputStream, cADPanel);
//        cADPanel.setSize(300, 300);
//        cADPanel.repaint();
//        cad.outputSVG(cADPanel);
//        cadPanelShape.add(cADPanel);
//        cadPanelShape.repaint();
        } catch (IOException ex) {
            Logger.getLogger(SectionProperties.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void renderCircle() {

        try {
            this.cad.setCircleRadius(newInnerDiameter);

        } catch (FileNotFoundException ex) {
            Logger.getLogger(SectionProperties.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DXFParseException ex) {
            Logger.getLogger(SectionProperties.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void firstLoading() {

        ButtonGroup buttonGroup = new ButtonGroup();
        buttonGroup.add(circleToggleButton);
        buttonGroup.add(wheelToggleButton);
        buttonGroup.add(starToggleButton);
        buttonGroup.add(pentaToggleButton);
        buttonGroup.add(hexaToggleButton);

        innerSettingPanel.setVisible(false);
    }

    int rowNo = 0;
    private CAD cad;
    double newInnerDiameter;
    boolean isCircle = false;
    ByteArrayInputStream inputStream;

    //CADPanel cADPanel = new CADPanel(); 
    public JSVGCanvas cADPanel = new JSVGCanvas();
    byte[] data;
    List<PropellantProperties> propellantList = new ArrayList<PropellantProperties>();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addPropellantBt;
    private javax.swing.JTextField alphaConstTB;
    private javax.swing.JTextField burningRateTB;
    private javax.swing.JPanel cadPanelShape;
    private javax.swing.JToggleButton circleToggleButton;
    private javax.swing.JTextField densityTB;
    private javax.swing.JLabel diameterInner;
    private javax.swing.JTextField gasConstTB;
    private javax.swing.JTextField gasTempTB;
    private javax.swing.JPanel geometricTab;
    private javax.swing.JTextField heatRatioTB;
    private javax.swing.JToggleButton hexaToggleButton;
    private javax.swing.JSpinner innerDiameterSpin;
    private javax.swing.JLabel innerHeaderLabel;
    private javax.swing.JPanel innerSettingPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JLabel mmLabel;
    private javax.swing.JToggleButton pentaToggleButton;
    private javax.swing.JTextField pressureExponentTB;
    private javax.swing.JPanel propellantPanel;
    private javax.swing.JPanel propellantTab;
    private javax.swing.JTable propellantTable;
    private javax.swing.JButton removePropellantBt;
    private javax.swing.JButton savePropertiesBT;
    private javax.swing.JTabbedPane sectionPropTabbedPane;
    private javax.swing.JToggleButton starToggleButton;
    private javax.swing.JToggleButton wheelToggleButton;
    // End of variables declaration//GEN-END:variables

}
