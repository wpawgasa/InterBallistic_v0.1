'   EROS
    DECLARE FUNCTION MDOTIG! (T!)                                         ' IGNITER MASS FLOW FUNCTION
    DECLARE SUB GEOMA (I, XI1!(), XI2!(), PERIF1(), PERIF2(), APORT())  ' SUBROUTINE TO GENERATE PERIPHERY AND PORT AREAS FOR TYPE A GEOMETRY
    DECLARE SUB GEOMB (I, XI1!(), XI!(), PERIF1(), PERIF2(), APORT())    ' SUBROUTINE TO GENERATE PERIPHERY AND PORT AREAS FOR TYPE B GEOMETRY
    OPEN "D:\Qbasic\WS1B\GLRS181.DAT" FOR OUTPUT AS #1                            ' OPEN OUTPUT FILE
    CLS
'
'   INPUT PARAMETERS
    TYPE VARIABLES
    T AS DOUBLE
    END TYPE
'
'   ROCKET DATA
'
    THROATDIA = 122           ' NOZZLE THROAT DIAMETER , MM
    LENGTH = 4.36               ' LENGTH OF PROPELLANT GRAIN , M
    BURNRATE10001 = 13.7         ' BURNING RATE AT 1000 PSI FOR FIRST PROPELLANT , MM/S
    NEXP1 = .28                  ' PRESSURE EXPONENT OF FIRST PROPELLANT
    RHOSG1 = 1.785               ' SPECIFIC GRAVITY OF FIRST PROPELLANT
    ALPHA1 = 120 / 10000000              ' EROSIVE BURNING CONSTANT OF FIRST PROPELLANT
    CSTAR1 = 1560               ' CHARACTERISTIC VELOCITY OF FIRST PROPELLANT  , M/S
    ISP = 265                   'Specific Impulse , sec
    BURNRATE10002 = 13.7           ' BURNING RATE AT 1000 PSI FOR FIRST PROPELLANT , MM/S
    NEXP2 = .28                  ' PRESSURE EXPONENT OF FIRST PROPELLANT
    RHOSG2 = 1.785                ' SPECIFIC GRAVITY OF SECOND PROPELLANT
    ALPHA2 = 120 / 10000000              ' EROSIVE BURNING CONSTANT OF SECOND PROPELLANT
    CSTAR2 = 1560               ' CHARACTERISTIC VELOCITY OF SECOND PROPELLANT  , M/S
    PI = 3.141592654#           ' VALUE OF PI
    RGASMW1 = 308               ' UNIVERSAL GAS CONST / MW OF GAS PRODUCT FIRST PROPELLANT, J/KG-DEG K
    TEMPFLAME1 = 3500           ' FLAME TEMP FIRST PROPELLANT, DEG K
    KRATIO1 = 1.2               ' HEAT CAPACITY RATIO  FIRST PROPELLANT
    RGASMW2 = 308               ' UNIVERSAL GAS CONST / MW OF GAS PRODUCT SECOND PROPELLANT, J/KG-DEG K
    TEMPFLAME2 = 3500           ' FLAME TEMPSECOND PROPELLANT, DEG K
    KRATIO2 = 1.2               ' HEAT CAPACITY RATIO SECOND PROPELLANT

'
'
    PSI = 900                   'GUESS PRESSURE , PSI
'
    P = PSI * 6895!             'GUESS PRESSURE , N/M2
    A1 = BURNRATE10001 / 1000 / ((6895000) ^ NEXP1)      'BURNING RATE PREEXPONENT OF FIRST PROPELLANT
    A2 = BURNRATE10002 / 1000 / ((6895000) ^ NEXP2)      'BURNING RATE PREEXPONENT OF SECOND PROPELLANT
    RHO1 = RHOSG1 * 1000        'DENSITY OF FIRST PROPELLANT, KG/M3
    RHO2 = RHOSG2 * 1000        'DENSITY OF SECOND PROPELLANT, KG/M3
    THROATAREA = PI / 4 * (THROATDIA / 1000) ^ 2
'
'
    N = 50                      ' NUMBER OF SEGMENTS
    NGEOM = 15                   ' SEGMENT AT START OF GEOMETRY CHANGE
    D0 = 75 / 1000              ' DIAMETER OF PORT , M
    D1A = 207 / 1000             ' CUTOFF DIAMETER OF INNER GRAIN FOR TYPE A GEOMETRY, M
    D1B = 207 / 1000             ' CUTOFF DIAMETER OF INNER GRAIN FOR TYPE B GEOMETRY, M
    DELTA = .01                 ' TIME STEP , S
   
    CONVERGENCE = .00001       ' PRESSURE CONVERGENCE LIMIT
    DIM RB1(0 TO N)             'BURNING RATE OF FIRST PROPELLANT , M/S
    DIM RB2(0 TO N)             'BURNING RATE OF SECOND PROPELLANT , M/S
    DIM RB1A(0 TO N)            'DUMMY BURNING RATE OF FIRST PROPELLANT , M/S
    DIM RB2A(0 TO N)            'DUMMY BURNING RATE OF SECOND PROPELLANT , M/S
    DIM MDOT(0 TO N)            'MASS FLOW , KG/S
    DIM MDOTA(0 TO N)           'DUMMY MASS FLOW , KG/S
    DIM XI1(0 TO N)             'DISTANCE BURNED FOR FIRST PROPELLANT , M
    DIM XI2(0 TO N)             'DISTANCE BURNED FOR SECOND PROPELLANT , M
    DIM PERIF1(0 TO N)          'PERIPHERY OF FIRST PROPELLANT  , M
    DIM PERIF2(0 TO N)          'PERIPHERY OF SECOND PROPELLANT  , M
    DIM APORT(0 TO N)           'PORT AREA  , M2
    DIM DELTAL(1 TO N)          'SEGMENT LENGTH  , M
    DIM RB01(0 TO N)            'BURNING RATE AT ZERO MASS FLOW FOR FIRST PROPELLANT, M/S
    DIM RB02(0 TO N)            'BURNING RATE AT ZERO MASS FLOW FOR SECOND PROPELLANT, M/S
    DIM MACH(0 TO N)            'MACH NUMBER OF GAS IN PORT
    DIM MACHA(0 TO N)           ' DUMMY MACH NUMBERS
'   SET INITIAL CONDITIONS
'
    T# = 0                     ' TIME , S
    TPRINT = 0
    FOR I = 0 TO N
    XI1(I) = 0
    XI2(I) = 0
    RB1(I) = (A1 * P ^ NEXP1)
    RB2(I) = (A2 * P ^ NEXP2)
    NEXT I
    FOR I = 1 TO N
    DELTAL(I) = LENGTH / N
    NEXT I
'
    PGUESS = P
'
    WRITE #1, "TIME", "X1(HEAD)", "X1(MID)", "X1(TAIL-8)", "X1(TAIL-6)", "X1(TAIL-4)", "X1(TAIL-3)", "X1(TAIL-2)", "X1(TAIL-1)", "X1(TAIL)", "PRESSURE", "THRUST"
'
'   START CALCULATIONS
'
'   TIME LOOP
'
    DO
'
'   PRESSURE CONVERGENCE LOOP
'
    DO

'
'
    FOR I = 0 TO N                  ' CALC PERIPHERIES AND PORT AREAS
    IF I <= NGEOM THEN
    CALL GEOMA(I, XI1(), XI2(), PERIF1(), PERIF2(), APORT())
    ELSE
    CALL GEOMB(I, XI1(), XI2(), PERIF1(), PERIF2(), APORT())
    END IF
    NEXT I
'
'    FOR I = N - 2 TO N           'COAT BORE SURFACE WITH 'INHIBITOR
   ' IF T <= .1 THEN
   ' PERIF1(I) = 0
   ' END IF
   ' NEXT I

'
    FOR I = 0 TO N                  ' CALC BASE BURN RATES
    RB01(I) = (A1 * P ^ NEXP1)
    RB02(I) = (A2 * P ^ NEXP2)
    NEXT I
'
    GAS1 = 0                        ' FIND MIXTURE RATIO OF COMBUSTION GAS FROM THE TWO PROPELLANTS
    GAS2 = 0
    FOR I = 0 TO N
    GAS1 = GAS1 + RB1(I) * PERIF1(I)
    GAS2 = GAS2 + RB2(I) * PERIF2(I)
    NEXT I
    IF GAS1 = 0 AND GAS2 = 0 THEN
    GASFRAC1 = 1
    GASFRAC2 = 0
    ELSE
    GASFRAC1 = GAS1 / (GAS1 + GAS2)
    GASFRAC2 = GAS2 / (GAS1 + GAS2)
    END IF

'
    RGASMW = RGASMW1 * GASFRAC1 + RGASMW2 * GASFRAC2
    TEMPFLAME = TEMPFLAME1 * GASFRAC1 + TEMPFLAME2 * GASFRAC2
    KRATIO = KRATIO1 * GASFRAC1 + KRATIO2 * GASFRAC2
'
    MDOT(0) = MDOTIG(T)
    MACH(0) = MDOT(0) / P / APORT(0) * SQR(RGASMW * TEMPFLAME / KRATIO)
    IF MDOT(0) = 0 THEN
    RB1(0) = RB01(0)
    RB2(0) = RB02(0)
    ELSE
    GG0 = MDOT(0) / APORT(0)
    DD0 = 4 * APORT(0) / (PERIF1(0) + PERIF2(0))
    BB0 = 53 * RB1(0) * RHOSG1 * 1000 / GG0
    RB1(0) = RB01(0) + ALPHA1 * (GG0 ^ .8) * (DD0 ^ (-.2)) * EXP(-BB0)
    RB2(0) = RB02(0) + ALPHA2 * (GG0 ^ .8) * (DD0 ^ (-.2)) * EXP(-BB0)
    END IF
'
    FOR I = 1 TO N              ' CALCULATE MDOT (MASS FLOW RATE IN PORT) AND BURNING RATES
    IF (PERIF1(I) + PERIF2(I)) > 0 THEN
    MDOTA(I) = MDOT(I - 1) + ((RB1(I - 1) * ((PERIF1(I - 1) + PERIF1(I)) / 2) * DELTAL(I) * RHO1) + ((RB2(I - 1) * ((PERIF2(I - 1) + PERIF2(I)) / 2) * DELTAL(I) * RHO2)))         ' MASS FLOW RATE USING BURNING RATE OF LAST SEGMENT
    MACHA(I) = MDOTA(I) / P / APORT(0) * SQR(RGASMW * TEMPFLAME / KRATIO)
    GGA = MDOTA(I) / APORT(I)
    DDA = 4 * APORT(I) / (PERIF1(I) + PERIF2(I))
    IF GGA = 0 THEN
    BBA = 1E+11
    ELSE
    BBA = 53 * RB1(I) * RHOSG1 * 1000 / GGA
    END IF
    ' BURNING RATE OF FIRST PROPELLANT USING MASS FLOW RATE FROM LAST SEGMENT
    RB1A(I) = RB01(I) + ALPHA1 * (GGA ^ .8) * (DDA ^ (-.2)) * EXP(-BBA)
    RB2A(I) = RB02(I) + ALPHA2 * (GGA ^ .8) * (DDA ^ (-.2)) * EXP(-BBA)
    MDOT(I) = MDOT(I - 1) + (((RB1(I - 1) * PERIF1(I - 1) + RB1A(I) * PERIF1(I)) / 2) * DELTAL(I) * RHO1) + (((RB2(I - 1) * PERIF2(I - 1) + RB2A(I) * PERIF2(I)) / 2) * DELTAL(I) * RHO2)       ' MASS FLOW RATE USING CORRECTED BURNING RATE
   ' MACH(I) = MDOT(I) / P / APORT(0) * SQR(RGASMW * TEMPFLAME / KRATIO)
    GG = MDOT(I) / APORT(I)
    DD = 4 * APORT(I) / (PERIF1(I) + PERIF2(I))
    BB = 53 * RB1(I) * RHOSG1 * 1000 / GG
    RB1(I) = RB01(I) + ALPHA1 * (GG ^ .8) * (DD ^ (-.2)) * EXP(-BB)
 ' BURNING RATE OF FIRST PROPELLANT USING CORRECTED MASS FLOW RATE
    RB2(I) = RB02(I) + ALPHA2 * (GG ^ .8) * (DD ^ (-.2)) * EXP(-BB)
    ELSEIF (PERIF1(I) + PERIF2(I)) = 0 THEN
    MDOTA(I) = MDOT(I - 1)                                          ' CASE WHEN ALL BURNT IN THAT SEGMENT
    RB1A(I) = 0
    RB2A(I) = 0
    MDOT(I) = MDOT(I - 1)
    RB1(I) = 0
    RB2(I) = 0
    END IF
'
    NEXT I
'
'
    IF (PERIF1(0) + PERIF2(0)) = 0 THEN
    RB1(0) = 0
    RB2(0) = 0
    END IF
    IF MDOT(N) = 0 THEN EXIT DO
'
    KK = (2 * KRATIO1 ^ 2) / (KRATIO1 - 1)

    KK1 = (2 / (KRATIO1 + 1)) ^ ((KRATIO1 + 1) / (KRATIO1 - 1))

    KK2 = 1 - (101356.5 / P) ^ ((KRATIO1 - 1) / KRATIO1)

    CF = SQR(KK * KK1 * KK2)

'
    CSTAR = ISP * 9.80665 / CF
'
    P = MDOT(N) * CSTAR / THROATAREA
'
'
    IF ABS((PGUESS - P) / P) < CONVERGENCE THEN EXIT DO   ' TEST FOR PRESSURE CONVERGENCE
'
    PGUESS = P
    LOOP               ' DOES NOT CONVERGE YET, LOOP BACK USING CALCULATED PRESSURE AS NEW GUESS
'
'   EXIT PRESSURE CONVERGENCE LOOP
'
    IF MDOT(N) = 0 THEN CLOSE #1: END
    FOR I = 0 TO N
    XI1(I) = XI1(I) + RB1(I) * DELTA                    ' NEW DISTANCE BURNT
    IF N < NGEOM THEN
    IF XI1(I) < (D1A - D0) / 2 THEN
    XI2(I) = 0
    ELSE
    XI2(I) = XI2(I) + RB2(I) * DELTA
    END IF
    ELSEIF N >= NGEOM THEN
    IF XI1(I) < (D1B - D0) / 2 THEN
    XI2(I) = 0
    ELSE
    XI2(I) = XI2(I) + RB2(I) * DELTA
    END IF
    END IF
    NEXT I
'
    T = T + DELTA


'    IF T <= .1 THEN
'    DELTATPRINT = .01
'    ELSE
    DELTATPRINT = .1            ' PRINT TIME STEP , S
'    END IF
   


    IF T >= TPRINT THEN PRINT INT(T * 10) / 10, INT(P / 6895), INT(P * THROATAREA * CF / 9.8 * 2.204)
    IF T >= TPRINT THEN WRITE #1, INT(T * 100) / 100, XI1(0) * 1000, XI1(INT((N) / 2)) * 1000, XI1(N - 8) * 1000, XI1(N - 6) * 1000, XI1(INT(N - 4)) * 1000, XI1(N - 3) * 1000, XI1(N - 2) * 1000, XI1(N - 1) * 1000, XI1(N) * 1000, INT(P / 6895), INT(P * THROATAREA * CF / 9.8 * 2.204): TPRINT = TPRINT + DELTATPRINT
   
    IF T > DELTATPRINT AND P < 5 * 68950 THEN CLOSE #1: END
'
    LOOP
'
'  EXIT TIME LOOP
   CLOSE #1
   END

SUB GEOMA (I, XI1(), XI2(), PERIF1(), PERIF2(), APORT())
OPEN "D:\Qbasic\WS1B\star3.DAT" FOR INPUT AS #2
L = 42 'DATA POINTS FOR GEOMETRY FUNCTION TYPE A
DIM XI1D(46), XI2D(46), PERIF1D(46), PERIF2D(46), APORT1D(46), APORT2D(46), APORT1(46), APORT2(46)
FOR II = 0 TO L
INPUT #2, XI1D(II), XI2D(II), APORT1D(II), APORT2D(II), PERIF1D(II), PERIF2D(II)
XI1D(II) = XI1D(II) / 1000
XI2D(II) = XI2D(II) / 1000
APORT1D(II) = APORT1D(II) / 1000000
APORT2D(II) = APORT2D(II) / 1000000
PERIF1D(II) = PERIF1D(II) / 1000
PERIF2D(II) = PERIF2D(II) / 1000
NEXT
CLOSE #2
'
FOR II = 0 TO L - 1
IF XI1(I) >= XI1D(II) AND XI1(I) < XI1D(II + 1) THEN
APORT1(I) = APORT1D(II) + (APORT1D(II + 1) - APORT1D(II)) / (XI1D(II + 1) - XI1D(II)) * (XI1(I) - XI1D(II))
APORT(I) = APORT1(I)
PERIF1(I) = PERIF1D(II) + (PERIF1D(II + 1) - PERIF1D(II)) / (XI1D(II + 1) - XI1D(II)) * (XI1(I) - XI1D(II))
END IF
NEXT

FOR II = 0 TO L - 1
IF XI2(I) >= XI2D(II) AND XI2(I) < XI2D(II + 1) THEN
APORT2(I) = APORT2D(II) + (APORT2D(II + 1) - APORT2D(II)) / (XI2D(II + 1) - XI2D(II)) * (XI2(I) - XI2D(II))
APORT(I) = APORT1(I) + APORT2(I)
PERIF2(I) = PERIF2D(II) + (PERIF2D(II + 1) - PERIF2D(II)) / (XI2D(II + 1) - XI2D(II)) * (XI2(I) - XI2D(II))
END IF
NEXT

IF XI1(I) >= .042 THEN
APORT(I) = .067852
PERIF1(I) = 0
END IF

END SUB

SUB GEOMB (I, XI1(), XI2(), PERIF1(), PERIF2(), APORT())
OPEN "D:\Qbasic\WS1B\circle.DAT" FOR INPUT AS #2
L = 82 'DATA POINTS FOR GEOMETRY FUNCTION TYPE A
DIM XI1D(83), XI2D(83), PERIF1D(83), PERIF2D(83), APORT1D(83), APORT2D(83), APORT1(83), APORT2(83)
FOR II = 0 TO L
INPUT #2, XI1D(II), XI2D(II), APORT1D(II), APORT2D(II), PERIF1D(II), PERIF2D(II)
XI1D(II) = XI1D(II) / 1000
XI2D(II) = XI2D(II) / 1000
APORT1D(II) = APORT1D(II) / 1000000
APORT2D(II) = APORT2D(II) / 1000000
PERIF1D(II) = PERIF1D(II) / 1000
PERIF2D(II) = PERIF2D(II) / 1000
NEXT
CLOSE #2
'
FOR II = 0 TO L - 1
IF XI1(I) >= XI1D(II) AND XI1(I) < XI1D(II + 1) THEN
APORT1(I) = APORT1D(II) + (APORT1D(II + 1) - APORT1D(II)) / (XI1D(II + 1) - XI1D(II)) * (XI1(I) - XI1D(II))
APORT(I) = APORT1(I)
PERIF1(I) = PERIF1D(II) + (PERIF1D(II + 1) - PERIF1D(II)) / (XI1D(II + 1) - XI1D(II)) * (XI1(I) - XI1D(II))
END IF
NEXT

FOR II = 0 TO L - 1
IF XI2(I) >= XI2D(II) AND XI2(I) < XI2D(II + 1) THEN
APORT2(I) = APORT2D(II) + (APORT2D(II + 1) - APORT2D(II)) / (XI2D(II + 1) - XI2D(II)) * (XI2(I) - XI2D(II))
APORT(I) = APORT1(I) + APORT2(I)
PERIF2(I) = PERIF2D(II) + (PERIF2D(II + 1) - PERIF2D(II)) / (XI2D(II + 1) - XI2D(II)) * (XI2(I) - XI2D(II))
END IF
NEXT

IF XI1(I) >= .082 THEN
APORT(I) = .067852
PERIF1(I) = 0
END IF

END SUB

FUNCTION MDOTIG (T)
TIG = .3               '  IGNITER BURN TIME , S
IGMASSGM = 100        '  IGNITER MASS , GRAMS
IGMASS = IGMASSGM / 1000'  IGNITERMASS , KG
IF T <= TIG THEN
MDOTIG = IGMASS / TIG
ELSE
MDOTIG = 0
END IF
END FUNCTION

